
import org.junit.Test;
import static org.assertj.core.api.Assertions.*;

public class GameShould {

    // Consideramos el mundo toroidal

    /*  Con nÃºmeros
=================================================================  Under-population
    [[0,0,0],[0,1,0],[0,0,1]]  ---> [0,0,0]    x+1   [0,0,0]
                                    [0,1,0]  ------> [0,0,0]
                                    [0,0,1]          [0,0,0]
=================================================================  Survival
    [[0,0,0],[1,1,0],[0,1,1]]  ---> [0,0,0]    x+1   [0,0,0]
                                    [1,1,0]  ------> [0,1,0]
                                    [0,1,1]          [0,0,0]
=================================================================  Overcrowding
    [[1,1,1],[1,1,1],[1,1,1]]  ---> [1,1,1]    x+1   [0,0,0]
                                    [1,1,1]  ------> [0,0,0]
                                    [1,1,1]          [0,0,0]
=================================================================  Reproduction
    [[0,0,0],[1,0,0],[0,1,1]]  ---> [0,0,0]    x+1   [0,0,0]
                                    [1,0,0]  ------> [0,1,0]
                                    [0,1,1]          [0,0,0]
=================================================================

     */

    /*  Con emojis
=============================================================================  Under-population
    [[ğŸ’€,ğŸ’€,ğŸ’€],[ğŸ’€,ğŸ˜€,ğŸ’€],[ğŸ’€,ğŸ’€,ğŸ˜€]]  ---> [ğŸ’€,ğŸ’€,ğŸ’€]    x+1   [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ’€,ğŸ˜€,ğŸ’€]  ------> [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ’€,ğŸ’€,ğŸ˜€]          [ğŸ’€,ğŸ’€,ğŸ’€]
=============================================================================  Survival
    [[ğŸ’€,ğŸ’€,ğŸ’€],[ğŸ˜€,ğŸ˜€,ğŸ’€],[ğŸ’€,ğŸ˜€,ğŸ˜€]]  ---> [ğŸ’€,ğŸ’€,ğŸ’€]    x+1    [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ˜€,ğŸ˜€,ğŸ’€]  ------> [ğŸ’€,ğŸ˜€,ğŸ’€]
                                          [ğŸ’€,ğŸ˜€,ğŸ˜€]          [ğŸ’€,ğŸ’€,ğŸ’€]
=============================================================================  Overcrowding
    [[ğŸ˜€,ğŸ˜€,ğŸ˜€],[ğŸ˜€,ğŸ˜€,ğŸ˜€],[ğŸ˜€,ğŸ˜€,ğŸ˜€]]  ---> [ğŸ˜€,ğŸ˜€,ğŸ˜€]    x+1   [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ˜€,ğŸ˜€,ğŸ˜€]  ------> [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ˜€,ğŸ˜€,ğŸ˜€]          [ğŸ’€,ğŸ’€,ğŸ’€]
=============================================================================  Reproduction
    [[ğŸ’€,ğŸ’€,ğŸ’€],[ğŸ˜€,ğŸ’€,ğŸ’€],[ğŸ’€,ğŸ˜€,ğŸ˜€]]  ---> [ğŸ’€,ğŸ’€,ğŸ’€]    x+1    [ğŸ’€,ğŸ’€,ğŸ’€]
                                          [ğŸ˜€,ğŸ’€,ğŸ’€]  ------> [ğŸ’€,ğŸ˜€,ğŸ’€]
                                          [ğŸ’€,ğŸ˜€,ğŸ˜€]          [ğŸ’€,ğŸ’€,ğŸ’€]
=============================================================================
     */

    @Test
    public void it_works (){
        assertThat(1).isEqualTo(1);
    }

}
